#! /bin/env bash

set -e

export env=("sit" "uat" "prod")

[[ ! $# -eq 1 ]] && echo "请输入需要部署的环境名称: sit/uat/prod" && exit 1

[[ ! "${env[@]}" =~ $1 ]] && echo "请输入需要部署的环境名称: sit/uat/prod" && exit 1

[[ ! -f app_parameters.ini ]] && echo "请配置部署应用依赖相关参数,如: 项目名称/镜像名称" && exit 1

function check_syntax() {
  ret=$(awk -F= 'BEGIN{valid=1}
    {
      #已经找到非法行,则一直略过处理
      if(valid == 0) next
      #忽略空行
      if(length($0) == 0) next
      #消除所有的空格
      gsub(" |\t","",$0)
      #检测是否是注释行
      head_char=substr($0,1,1)
      if (head_char != "#"){
        #不是字段=值 形式的检测是否是块名
        if( NF == 1){
          b=substr($0,1,1)
          len=length($0)
          e=substr($0,len,1)
          if (b != "[" || e != "]"){
              valid=0
          }
        }else if( NF == 2){
        #检测字段=值 的字段开头是否是[
          b=substr($0,1,1)
          if (b == "["){
              valid=0
          }
        }else{
        #存在多个=号分割的都非法
          valid=0
        }
      }
    }
    END{print valid}' $1)

  if [ ! $ret -eq 1 ]; then
    echo "app_parameters.ini 配置文件中存在语法错误,请检查!!"
    exit 1
  fi
}

function get_field_value() {
  blockname=$2

  begin_block=0
  end_block=0

  rm -f .env
  cat $1 | while read line; do
    if [ "X$line" = "X[$blockname]" ]; then
      begin_block=1
      continue
    fi

    if [ $begin_block -eq 1 ]; then
      end_block=$(echo $line | awk 'BEGIN{ret=0} /^\[.*\]$/{ret=1} END{print ret}')
      if [ $end_block -eq 1 ]; then
        #echo "end block"
        break
      fi

      need_ignore=$(echo $line | awk 'BEGIN{ret=0} /^#/{ret=1} /^$/{ret=1} END{print ret}')
      if [ $need_ignore -eq 1 ]; then
        #echo "ignored line:" $line
        continue
      fi
      field=$(echo $line | awk -F= '{gsub(" |\t","",$1); print $1}')
      value=$(echo $line | awk -F= '{gsub(" |\t","",$2); print $2}')
      # echo $field
      # echo $value
      echo "export ${field^^}=${value}" >>.env
    fi
  done
  cat .env
}

check_syntax app_parameters.ini
get_field_value app_parameters.ini project-name
source .env

find . -type f -print0 | xargs -0 sed -e "s#\${PROJECT_NAME}#${PROJECT_NAME}#g" -i
find . -type f -print0 | xargs -0 sed -e "s#\${APP_DEMO_NAME}#${APP_DEMO_NAME}#g" -i
sed -e "s#\${APP_DEMO_IMAGE_NAME}#${APP_DEMO_IMAGE_NAME}#g" -i overlays/$1/kustomization.yaml
sed -e "s#\${APP_DEMO_IMAGE_TAG}#${APP_DEMO_IMAGE_TAG}#g" -i overlays/$1/kustomization.yaml
rm -f .env

kustomize build overlays/$1
