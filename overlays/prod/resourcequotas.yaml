---
apiVersion: v1
kind: ResourceQuota
metadata:
  name: ${PROJECT_NAME}-resource-limit
spec:
  hard:
    # 10个服务, cpu request: 50mi, mem request: 256Mi
    requests.cpu: "500m"
    requests.memory: "2.5G"
    # 10个服务, cpu limit: 1, mem limit: 1.5Gi
    limits.cpu: "10"
    limits.memory: "15Gi"
    # 所有 PVC，存储资源的需求总量不能超过该值。 根据需要持久化的服务个数和使用大小确定
    requests.storage: "100Gi"
    # 在命名空间的所有 Pod 中，本地临时存储请求的总和不能超过此值。（pod 容器运行时产生数据 request 值, 不包含镜像大小）
    requests.ephemeral-storage: "10Gi"
    # 在命名空间的所有 Pod 中，本地临时存储限制值的总和不能超过此值。（pod 容器运行时产生数据 limit 值, 不包含镜像大小）
    limits.ephemeral-storage: "20Gi"
---
# apiVersion: v1
# kind: ResourceQuota
# metadata:
#   name: ${PROJECT_NAME}-resource-limit-high
# spec:
#   hard:
#     requests.cpu: "200m"
#     requests.memory: "512Mi"
#     limits.cpu: "2"
#     limits.memory: "3Gi"
#     # 所有 PVC，存储资源的需求总量不能超过该值
#     requests.storage: "100Gi"
#     # 在命名空间的所有 Pod 中，本地临时存储请求的总和不能超过此值。（pod请求值大小）
#     requests.ephemeral-storage: "2Gi"
#     # 在命名空间的所有 Pod 中，本地临时存储限制值的总和不能超过此值。（pod限制值大小）
#     limits.ephemeral-storage: "4Gi"
#     scopeSelector:
#       matchExpressions:
#       - operator : In
#         scopeName: PriorityClass
#         values: ["high"]
---
apiVersion: v1
kind: ResourceQuota
metadata:
  name: ${PROJECT_NAME}-resource-counts
spec:
  hard:
    pods: "20"
    configmaps: "10"
    persistentvolumeclaims: "5"
    secrets: "10"
    services: "10"
    services.loadbalancers: "2"
    services.nodeports: "10"
